<?xml version="1.0"?>
<!-- $Id$ -->
<!-- 
   Copyright 2004 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="hivedoc-report">
	<fail unless="ant.file.forrest" message="Must import forrest.xml first."/>
	<property file="${hivebuild.dir}/hivedoc-report.properties"/>
	
	<!-- Fileset used to identify the derived files that will be scanned for
		   module deployment descriptors. -->
		   
	<path id="default.hivedoc.classpath">
		<fileset dir="${target.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${external.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	
	<macrodef name="hivedoc-report">
		<attribute name="doc-path-id" default="default.hivedoc.classpath"
				description="Path defining the files to obtain deployment descriptors from."/>
						
		<attribute name="taskdef-path-id" default="default.hivedoc.classpath"
				description="Path containing the master HiveMind module, which contains the Ant tasks."/>
				
		<sequential>
			<announce message="Building Master Registry ..."/>

      <!-- The doc-path has to include the master module, which is also the source of
           the taskdefs. -->
           
<pathconvert property="hivedoc.path.text" refid="@{doc-path-id}" pathsep=" - "/>
<echo>HiveDoc classpath: ${hivedoc.path.text}</echo>

           
			<taskdef resource="hivemind-tasks.properties">
				<classpath refid="@{taskdef-path-id}"/>	
			</taskdef>

			<constructregistry output="${hivedoc.registry.file}">
				<descriptors refid="@{doc-path-id}"/>	
			</constructregistry>

			<mkdir dir="${hivedoc.output.dir}"/>
			
			<announce message="Building HiveDoc ..."/>
			
			<xslt out="${hivedoc.output.dir}/index.html"
				in="${hivedoc.registry.file}"
				style="${hivedoc.xslt.file}">
				<param name="base.dir" expression="${hivedoc.output.dir}"/>
			</xslt>
				
			<copy todir="${hivedoc.output.dir}">
				<fileset dir="${hivedoc.assets.dir}">
					<exclude name="*.xsl"/>	
				</fileset>	
			</copy>
				

			<add-report-to-menu element="hivedoc-report" label="HiveDoc"
				file="hivedocs/index.html"/>
		</sequential>
	</macrodef>
</project>
